---
// import { Debug } from 'astro:components';
// import type { MarkdownLayoutProps } from 'astro';
import '@repo/styles/css/markdown-style.css';
import Layout from '#layouts/Layout.astro';
import { format } from 'date-fns';
import { getEntry } from 'astro:content';
import type { BlogSchemaType } from '#schemas/index.js';
import { Image } from 'astro:assets';

import TagContainer from '#components/TagContainer.astro';

import Box from '@repo/layout-webcomponents/Box';
import Stack from '@repo/layout-webcomponents/Stack';

interface Props {
  blogData: BlogSchemaType;
}

// type Props = MarkdownLayoutProps<{
//   // Define frontmatter props here
//   blogData: BlogSchemaType;
// }>;

// type Props = CollectionEntry<'blog'>['data'];
// const { blogData } = Astro.props;

const { blogData } = Astro.props;

const { title, description, pubDate, cover, author, tags } = blogData;

const results = await getEntry('authors', author.id);
const { name } = results.data;
---

<!-- TODO: fix the date format -->
<Layout title={title} description={description}>
  <!-- <Debug {author} /> -->

  <Stack space="var(--s0)">
    <Box borderWidth="1px" padding="0">
      <Image width="600" height="300" src={cover.src} alt={cover.alt} />
    </Box>

    <Box borderWidth="1px"><h1>{title}</h1></Box>

    <Box borderWidth="1px">
      Written by: {name},
      {format(pubDate, 'd MMM, yyyy')}
    </Box>

    {
      tags && (
        <Box borderWidth="1px">
          <TagContainer tags={tags} />
        </Box>
      )
    }
    <Box padding="var(--s00)" borderWidth="1px">
      <slot />
    </Box>
  </Stack>
</Layout>
