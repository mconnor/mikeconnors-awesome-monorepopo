---
import Filter from '#components/Filter.astro';
import StatsWidget from '#components/filterDemo/Stats.astro';
import FrameworkCard from '#components/filterDemo/FrameworkCard.astro';
// import ProjectRow from '#components/ProjectRow.astro';

import { projectData, tableData } from '#app.config.ts';
import { zTableRowSchema } from '#schemas/index.ts';

import Layout from '#layouts/Layout.astro';

const frameworkBadgeColors = {
  svelte: 'badge-warning',
  vue: 'badge-success',
  react: 'badge-info',
};
---

<Layout centerWidth="100%">
  <div class="mx-auto max-w-7xl p-8">
    <!-- Header -->
    <div class="mb-8 text-center">
      <h1 class="mb-4 text-4xl font-bold text-base-content">
        Framework Filter Demo
      </h1>
      <p class="mx-auto max-w-2xl text-lg text-base-content/70">
        Use the filter below to toggle visibility of components based on their
        framework. This demonstrates how the DaisyUI Filter component can
        control other components.
      </p>
    </div>

    <!-- Filter Component -->
    <div class="mb-8 flex justify-center">
      <div class="card bg-base-100 shadow-lg">
        <div class="card-body items-center text-center">
          <h2 class="mb-4 card-title">Filter by Framework</h2>
          <Filter />
        </div>
      </div>
    </div>

    <!-- Framework Cards Section -->
    <section class="mb-12">
      <h2 class="mb-6 text-2xl font-bold text-base-content">
        Framework Showcase
      </h2>
      <div class="grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-3">
        {
          projectData.map((item) => (
            <FrameworkCard
              framework={item.framework}
              title={item.title}
              description={item.description}
            />
          ))
        }
      </div>
    </section>

    <!-- Projects Table Section -->
    <section>
      <h2 class="mb-6 text-2xl font-bold text-base-content">Projects Table</h2>
      <div
        class="overflow-x-auto rounded-box border border-base-content/5 bg-base-100"
      >
        <table class="table w-full border-collapse">
          <thead>
            <tr>
              <th class="w-1/6">Project</th>
              <th class="w-4/6">Description</th>
              <th class="w-1/6">Links</th>
            </tr>
          </thead>
          <tbody>
            {
              tableData.map((p) => {
                const { data, error } = zTableRowSchema.safeParse(p);

                if (error) throw new Error(error.message);

                return (
                  <tr
                    class="w-full transition-all duration-300"
                    data-framework={data.framework}
                  >
                    <td>
                      <div class="flex flex-col items-stretch">
                        <h4 class="font-bold">{data.projectName}</h4>
                        <div
                          class={`badge badge-sm ${frameworkBadgeColors[data.framework]}`}
                        >
                          {data.framework}
                        </div>
                      </div>
                    </td>
                    <td>
                      <div class="w-full text-sm text-base-content/70">
                        {data.description}
                      </div>
                    </td>
                    <td>
                      <div class="flex flex-col">
                        {data.githubUrl && (
                          <a
                            href={data.githubUrl}
                            class="btn btn-ghost btn-xs"
                            target="_blank"
                            rel="noopener noreferrer"
                          >
                            GitHub
                          </a>
                        )}

                        <a
                          href={data.demoUrl}
                          class="btn btn-xs btn-primary"
                          target="_blank"
                          rel="noopener noreferrer"
                        >
                          Demo
                        </a>
                      </div>
                    </td>
                  </tr>
                );
              })
            }
          </tbody>
        </table>
      </div>
    </section>

    <!-- Additional Filterable Content -->
    <section class="mt-12">
      <h2 class="mb-6 text-2xl font-bold text-base-content">Quick Stats</h2>

      <div class="grid grid-cols-1 gap-6 md:grid-cols-3">
        <div data-framework="react">
          <StatsWidget
            framework="react"
            description="Dashboard & Blog"
            daisyColor="primary"
            count={2}
            emoji="⚛️"
          />
        </div>
        <div data-framework="svelte">
          <StatsWidget
            framework="svelte"
            description="Weather, Portfolio, SvelteKit"
            daisyColor="primary"
            count={3}
            emoji="🔥"
          />
        </div>

        <div data-framework="vue">
          <StatsWidget
            framework="vue"
            description="Tasks & Nuxt site"
            daisyColor="accent"
            count={4}
            emoji="💚"
          />
        </div>
      </div>
    </section>

    <!-- Custom Script for Enhanced Filtering -->
  </div>
</Layout>

<script src="../libs/filterPage.ts"></script>
