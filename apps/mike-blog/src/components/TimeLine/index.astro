---
import { z } from 'astro:content';

const geoTimeNodeSchema = z.object({
  city: z.string(),
  year: z.number().int().gte(1964),
});
const timeLineSchema = z.array(geoTimeNodeSchema);

interface Props {
  items: z.infer<typeof timeLineSchema>;
}

const { items } = Astro.props;
---

<ul class="not-prose group timeline timeline-vertical md:timeline-horizontal">
  {
    items.map(({ city, year }, index, array) => {
      const first = index !== 0;
      const last = array.length - 1;
      return (
        <li>
          {first && <hr />}

          <div class="timeline-start">{year}</div>
          <div class="timeline-middle">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 20 20"
              fill="currentColor"
              class="h-5 w-5"
            >
              <path
                fill-rule="evenodd"
                d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z"
                clip-rule="evenodd"
              />
            </svg>
          </div>
          <div class="timeline-end timeline-box">{city}</div>
          {!last && <hr />}
        </li>
      );
    })
  }
</ul>
