---
import Box from '@repo/layout-webcomponents/Box';
---

<astro-dev-toolbar-window>
  <p>My content</p>
</astro-dev-toolbar-window>

<script>
  const myButton = document.createElement('astro-dev-toolbar-button');
  myButton.textContent = 'Click me!';
  myButton.buttonStyle = 'purple';
  myButton.size = 'medium';

  myButton.addEventListener('click', () => {
    console.log('Clicked!');
  });
</script>
<!-- <Box>
  <div>xxx</div>
  <button type="button">back</button>
</Box> -->

<!-- <Box>
  <Box>
    <div class="flex border-2">
      <button type="button" id="prev">back</button>
      <div id="monthYear" class="">xxx</div>
      <button type="button" id="next"> forward </button>
    </div>
  </Box>
  <Box>
    <div class="grid grid-cols-7 gap-2 bg-accent-400" id="calendar">
      <div>Sun</div>
      <div>Mon</div>
      <div>Tue</div>
      <div>Wed</div>
      <div>Thu</div>
      <div>Fri</div>
      <div>Sat</div>
    </div>
  </Box>
</Box> -->

<!-- <script>
  let currentDate = new Date();

  const monthYear = document.getElementById('monthYear');
  const calendar = document.getElementById('calendar');
  const prevBtn = document.getElementById('prev');
  const nextBtn = document.getElementById('next');

  function renderCalendar(date: Date) {
    const year = date.getFullYear();
    const month = date.getMonth();

    const firstDay = new Date(year, month, 1);
    const lastDay = new Date(year, month + 1, 0);

    // Update header with month and year
    monthYear!.textContent = firstDay.toLocaleDateString('en-US', {
      month: 'long',
      year: 'numeric',
    });

    // Remove old day cells (after header cells)
    while (calendar!.children.length > 7) {
      const lastChild = calendar!.lastChild;
      lastChild && calendar!.removeChild(lastChild);
    }

    const startDay = firstDay.getDay();
    const totalDays = lastDay.getDate();

    // Add empty cells for alignment before the first day
    for (let i = 0; i < startDay; i++) {
      const empty = document.createElement('div');
      empty.className = 'text-center';
      calendar.appendChild(empty);
    }

    // Create day cells
    for (let i = 1; i <= totalDays; i++) {
      const day = document.createElement('div');
      day.className = 'text-center py-2 border border-gray-300 rounded';
      day.textContent = i.toString();
      calendar!.appendChild(day);
    }
  }

  prevBtn!.addEventListener('click', () => {
    currentDate.setMonth(currentDate.getMonth() - 1);
    renderCalendar(currentDate);
  });

  nextBtn!.addEventListener('click', () => {
    currentDate.setMonth(currentDate.getMonth() + 1);
    renderCalendar(currentDate);
  });

  renderCalendar(currentDate);
</script> -->
