---
// import { Debug } from 'astro:components';
// import type { MarkdownLayoutProps } from 'astro';
import ImageWrapper from '#components/ImageWrapper.astro';
import '@repo/styles/css/markdown-style.css';

import Box from '@repo/ui-lit/Box';

import type { CollectionEntry } from 'astro:content';
import { getEntry } from 'astro:content';
import { format } from 'date-fns';

import Layout from '#layouts/Layout.astro';
type Props = CollectionEntry<'blog'>['data'];
// interface Props {
//   blogData: BlogSchemaType;
// }

// type Props = MarkdownLayoutProps<{
//   // Define frontmatter props here
//   blogData: BlogSchemaType;
// }>;

// type Props = CollectionEntry<'blog'>['data'];
// const { blogData } = Astro.props;

const { title, description, pubDate, cover, author, tags } = Astro.props;

const authorResults = await getEntry('authors', author.id);

if (!authorResults) {
  throw new Error(`Author not found for post: ${title}`);
}

const { name } = authorResults.data;

// const { data :  relatedPostData} = getEntries('blog', authorResults.data.relatedPosts);
---

<!-- TODO: fix the date format -->
<Layout title={title} description={description}>
  <div class="wa-flank">
    <div class="wa-frame" style="max-inline-size: 20rem;">
      <ImageWrapper url={cover.src} alt={cover.alt} />
    </div>

    <Box borderWidth="1px">
      Written by: {name},
      {format(pubDate, 'd MMM, yyyy')}
    </Box>
  </div>

  <!-- <Stack space="var(--s0)">
    <Box borderWidth="1px" padding="0">
      <ImageWrapper  url={cover.src} alt={cover.alt} />

    </Box>

    <Box invert borderWidth="1px"><h1>{title}</h1></Box>

    <Box borderWidth="1px">
      Written by: {name},
      {format(pubDate, 'd MMM, yyyy')}
    </Box>

    {
      tags && (
        <Box borderWidth="1px">
          <TagContainer tags={tags} />
        </Box>
      )
    }
    <Box padding="var(--s00)" borderWidth="1px">
      <slot />
    </Box>
  </Stack> -->
</Layout>
