---
import Layout from '#layouts/Layout.astro';
import { Image } from 'astro:assets';
import { getEntry } from 'astro:content';

import Headline from '#components/Headline.astro';
import { type CollectionEntry } from 'astro:content';
import Prose from '#components/Prose.astro';
import Stack from '@repo/layout-webcomponents/Stack';

import Tag from '#components/TagContainer/Tag.astro';
// interface Props extends CollectionEntry<'blog'> {}

import { format } from 'date-fns';

interface Props {
  post: CollectionEntry<'blog'>;
}

const { post } = Astro.props;
const { title, description, date, cover } = post.data;

// const authorObj =
//   postData.author ?
//     await getEntry(postData.author.collection, postData.author.id)
//   : null;

// console.log(authorObj);
// ImageSchema.safeParse(cover);
// let authorObj;
// if (authorRef) {
// const authorObj = await getEntry('authors', data.author.id);
// if (!authorObj) {
//   // Handle Error, for example:
//   throw new Error('Could not find author ' + data.author.id);
// }

const W = 1020;
const H = 510;
---

<Layout title={title} description={description} maxW="100%">
  <Stack space="var(--s1)">
    <Headline headline={title} />

    {date && <p>Pub.on: {format(date, 'yyyy-MM-dd')}</p>}

    {
      cover && (
        <Image
          src={cover}
          alt="xxx"
          width={10}
          height={10}
          class={'w-full rounded-xl'}
        />
      )
    }

    <!-- {
      authorObj ?
        <a class="mx-auto link" href={`../authors/${authorObj.data.id}`}>
          {authorObj.data.name}
        </a>
      : <p>NOT AUTHOR</p>
    } -->
    <div class="">
      <Prose>
        <slot />
      </Prose>
    </div>
  </Stack>
</Layout>
