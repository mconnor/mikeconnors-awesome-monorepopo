---
interface Props {
  themes: string[];
}
const { themes } = Astro.props as Props;
// interface Props {
//   storedTheme?: string;
// }

// const { storedTheme = 'auto' } = Astro.props;
---

<script>
  import './AstroThemeSwitcher';
</script>

<astro-theme-switcher>
  <button
    class="btn btn-sm"
    popovertarget="popover-theme"
    style="anchor-name:--anchor-theme"
  >
    Mike Connor
    <svg
      width="12px"
      height="12px"
      class="inline-block h-2 w-2 fill-current opacity-60"
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 2048 2048"
    >
      <path d="M1799 349l242 241-1017 1017L7 590l242-241 775 775 775-775z"
      ></path>
    </svg>
  </button>
  <form id="theme" data-select-theme>
    <ul
      class="menu dropdown w-52 rounded-box bg-base-100 shadow-sm"
      popover
      id="popover-theme"
      style="position-anchor:--anchor-theme"
    >
      {
        themes.map((theme) => (
          <li>
            <label class="label flex cursor-pointer justify-between">
              <span class="label-text capitalize">{theme}</span>
              <input
                type="radio"
                name="theme-dropdown"
                class="theme-controller radio radio-sm"
                value={theme}
                data-set-theme={theme}
              />
            </label>
          </li>
        ))
      }
    </ul>
    <!-- <Label theme="auto" />
    <Label theme="light" />
    <Label theme="dark" />
    <Label theme="toucan" />
    <Label theme="dim" />
    <Label theme="grape" />
    <Label theme="choco" /> -->
  </form>
</astro-theme-switcher>
