---
interface Props {
  themes?: string[];
}



const { themes=["light", "dark", "cupcake", "bumblebee", "emerald", "corporate", "synthwave", "retro", "cyberpunk", "valentine", "halloween", "garden", "forest", "aqua", "lofi", "pastel", "fantasy", "wireframe", "black", "luxury", "dracula", "cmyk", "autumn", "business", "acid", "lemonade", "night", "coffee", "winter", "dim", "nord", "sunset", "caramellatte", "abyss", "silk"] } = Astro.props as Props;

const WH = '12px';

// const themes = ['Default', 'Retro', 'Cyberpunk', 'Valentine', 'Aqua'];

---

<button class="btn" popovertarget="popover-1" style="anchor-name:--anchor-1">
  Theme
  <svg
    width={WH}
    height={WH}
    class="inline-block h-2 w-2 fill-current opacity-60"
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 2048 2048"
  >
    <path d="M1799 349l242 241-1017 1017L7 590l242-241 775 775 775-775z"></path>
  </svg>
</button>
<ul
  class="menu dropdown w-52 rounded-box bg-base-100 shadow-sm"
  popover
  id="popover-1"
  style="position-anchor:--anchor-1"
>
  {
    themes.map((theme) => (
      <li>
        <input
          type="radio"
          name="theme-dropdown"
          class="theme-controller btn btn-block justify-start btn-ghost btn-sm"
          aria-label={theme.charAt(0).toUpperCase() + theme.slice(1)}
          value={theme}
        />
      </li>
    ))
  }
</ul>
