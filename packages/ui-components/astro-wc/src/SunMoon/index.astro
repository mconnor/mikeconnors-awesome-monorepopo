---
import Icon from '#Icon/index.astro';

type IconType = typeof Icon;
---

<astro-sunmoon>
  <button id="btnSun" type="button" aria-label="Toggle dark mode">
    <Icon
      icon="sun"
      size="var(--s1)"
      color="var(--color-primary-200)"
      gradient={false}
    /></button
  >
  <button id="btnMoon" type="button" aria-label="Toggle dark mode">
    <Icon
      icon="moon-stars"
      size="var(--s1)"
      color="var(--color-primary-200)"
      gradient={false}
    /></button
  >
</astro-sunmoon>

<script>
  class AstroSunMoon extends HTMLElement {
    // doc!: Element;
    // sun!: HTMLButtonElement;
    // moon!: HTMLButtonElement;

    onSunClick = () => {
      document.firstElementChild?.setAttribute('data-theme', 'light');
    };

    onMoonClick = () => {
      document.firstElementChild?.setAttribute('data-theme', 'dark');
    };
    connectedCallback() {
      // this.doc = document.documentElement;
      //   try {
      //     const sun = this.querySelector('#sun')! as HTMLButtonElement;
      //     const moon = this.querySelector('#moon')! as HTMLButtonElement;

      //   } catch (e) {
      //     console.error('Error selecting elements:', e);
      //     return;
      //   }
      // }

      const sun = this.querySelector('#btnSun') as HTMLButtonElement;

      const moon = this.querySelector('#btnMoon') as HTMLButtonElement;
      sun.addEventListener('click', this.onSunClick);
      moon.addEventListener('click', this.onMoonClick);
      // disconnectedCallback() {
      //   const sun.removeEventListener('click', const onSunClick);
      //   const moon.removeEventListener('click', const onMoonClick);
      // }
    }
  }

  customElements.define('astro-sunmoon', AstroSunMoon);
</script>
